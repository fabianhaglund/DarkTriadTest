{"version":3,"sources":["global-theme.ts","components/Question.tsx","components/Heading.tsx","components/SubHeading.tsx","components/SubmitButton.tsx","math/Zscore.js","data/DarkTriadData.tsx","features/DarkTriadForm.tsx","App.js","index.js"],"names":["GlobalTheme","borderRadius","fontFamily","colors","main","secondary","QuestionWrapper","styled","label","props","theme","StyledInput","input","Question","index","question","type","min","max","name","onChange","StyledHeading","h1","Heading","text","StyledSubHeading","h4","SubHeading","StyledSubmitButton","SubmitButton","value","percentiles","ZscorePercentile","score","filter","p","length","questions","fields","DarkTriadForm","useState","machiavelliResult","setMachiavelliResult","narcissismResult","setNarcissismResult","psychopathyResult","setPsychopathyResult","showResults","setShowResults","responseRefs","useRef","Results","responses","console","log","machiavelliResponses","slice","narcissismResponses","psychopathyResponses","machiavelli","x","reduce","a","b","MachiavelliScore","narcissism","NarcissismScore","psychopathy","PsychopathyScore","Explanation","result","concat","toString","style","display","flexDirection","onClick","onSubmit","e","preventDefault","responseValues","Object","values","current","map","parseInt","results","q","i","target","App","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEaA,EAA4B,CACrCC,aAAc,MACdC,WAAY,YACZC,OAAQ,CACJC,KAAM,UACNC,UAAW,Y,qBCJbC,EAAkBC,IAAOC,MAAV,uIAEV,SAACC,GAAD,OAAWA,EAAMC,MAAMP,OAAOC,QAMnCO,EAAcJ,IAAOK,MAAV,iOAoBV,SAASC,EAASJ,GAAuB,IAAD,IAE7C,OACE,eAACH,EAAD,WACGG,EAAMK,MAAQ,EADjB,KACsBL,EAAMM,SAC1B,cAACJ,EAAD,CACEK,KAAK,SACLC,IAAG,UAAER,EAAMQ,WAAR,QAAe,EAClBC,IAAG,UAAET,EAAMS,WAAR,QAAe,EAClBC,KAAMV,EAAMU,KACZC,SAAUX,EAAMW,aAPEX,EAAMK,OC9BhC,I,EAAMO,EAAgBd,IAAOe,GAAV,4BAOZ,SAASC,EAAQd,GACtB,OAAO,cAACY,EAAD,UAAgBZ,EAAMe,OCR/B,I,EAAMC,EAAmBlB,IAAOmB,GAAV,4BAOf,SAASC,EAAWlB,GACzB,OAAO,cAACgB,EAAD,UAAmBhB,EAAMe,OCRlC,IAAMI,EAAqBrB,IAAOK,MAAV,iIAKA,SAAAH,GAAK,OAAIA,EAAMC,MAAMP,OAAOE,aAG7C,SAASwB,IACZ,OAAO,cAACD,EAAD,CAAoBZ,KAAK,SAASc,MAAM,WCWnD,IAAMC,EAAc,EACjB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,IACA,MACA,KACA,KACD,EACA,KACA,IACA,KACA,GACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA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","file":"static/js/main.21b1fb52.chunk.js","sourcesContent":["import { DefaultTheme } from \"styled-components\";\n\nexport const GlobalTheme: DefaultTheme = {\n    borderRadius: '5px',\n    fontFamily: \"Helvetica\",\n    colors: {\n        main: \"#676261\",\n        secondary: '#ED8974'\n    }\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst QuestionWrapper = styled.label`\n  font-size: 18px;\n  color: ${(props) => props.theme.colors.main};\n  padding: 10px;\n  display: flex; \n  justify-content: space-between;\n`;\n\nconst StyledInput = styled.input`\n    font-weight: bold;\n    font-size: 26px;\n    margin-left: 14px;\n    height: 26px;\n    width: 10%;\n    border-radius: 4px; \n    border-width: 1px;\n    border-color: rgba(255,255,255,0.8)\n`;\n\ntype QuestionProps = {\n  question: string;\n  index: number;\n  name: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  min?: string;\n  max?: string;\n};\n\nexport function Question(props: QuestionProps) {\n\n  return (\n    <QuestionWrapper key={props.index}>\n      {props.index + 1}. {props.question}\n      <StyledInput\n        type=\"number\"\n        min={props.min ?? 1}\n        max={props.max ?? 5}\n        name={props.name}\n        onChange={props.onChange}\n      />\n    </QuestionWrapper>\n  );\n}\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst StyledHeading = styled.h1`\n`;\n\ntype HeadingProps = {\n    text: string\n}\n\nexport function Heading(props: HeadingProps) {\n  return <StyledHeading>{props.text}</StyledHeading>;\n}\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst StyledSubHeading = styled.h4`\n`;\n\ntype SubHeadingProps = {\n    text: string;\n}\n\nexport function SubHeading(props: SubHeadingProps) {\n  return <StyledSubHeading>{props.text}</StyledSubHeading>;\n}\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst StyledSubmitButton = styled.input`\nfont-size: 44px;\n    width: 60%;\n    height: 120px;\n    border: none;\n    background-color: ${props => props.theme.colors.secondary}\n`;\n\nexport function SubmitButton(){\n    return <StyledSubmitButton type=\"submit\" value=\"Submit\" />\n};","\n// Dark Triad Z-scores\nexport function ZscoreMachiavelli(x) {\n  var m = 3;\n  var sd = 0.59;\n  var Z = (x - m) / sd;\n  return Z;\n}\n\nexport function ZscoreNarcissism(x) {\n  var m = 2.71;\n  var sd = 0.56;\n  var Z = (x - m) / sd;\n  return Z;\n}\n\nexport function ZscorePsychopathy(x) {\n  var m = 2.2;\n  var sd = 0.6;\n  var Z = (x - m) / sd;\n  return Z;\n}\n\n// Percentiles \nconst percentiles = [\n  -2.326,\n  -2.054,\n  -1.881,\n  -1.751,\n  -1.645,\n  -1.555,\n  -1.476,\n  -1.405,\n  -1.341,\n  -1.282,\n  -1.227,\n  -1.175,\n  -1.126,\n  -1.08,\n  -1.036,\n  -0.994,\n  -0.954,\n  -0.915,\n  -0.878,\n  -0.842,\n  -0.806,\n  -0.772,\n  -0.739,\n  -0.706,\n  -0.674,\n  -0.643,\n  -0.613,\n  -0.583,\n  -0.553,\n  -0.524,\n  -0.496,\n  -0.468,\n  -0.44,\n  -0.412,\n  -0.385,\n  -0.358,\n  -0.332,\n  -0.305,\n  -0.279,\n  -0.253,\n  -0.228,\n  -0.202,\n  -0.176,\n  -0.151,\n  -0.126,\n  -0.1,\n  -0.075,\n  -0.05,\n  -0.025,\n  0,\n  0.025,\n  0.05,\n  0.075,\n  0.1,\n  0.126,\n  0.151,\n  0.176,\n  0.202,\n  0.228,\n  0.253,\n  0.279,\n  0.305,\n  0.332,\n  0.358,\n  0.385,\n  0.412,\n  0.44,\n  0.468,\n  0.496,\n  0.524,\n  0.553,\n  0.583,\n  0.613,\n  0.643,\n  0.674,\n  0.706,\n  0.739,\n  0.772,\n  0.806,\n  0.842,\n  0.878,\n  0.915,\n  0.954,\n  0.994,\n  1.036,\n  1.08,\n  1.126,\n  1.175,\n  1.227,\n  1.282,\n  1.341,\n  1.405,\n  1.476,\n  1.555,\n  1.645,\n  1.751,\n  1.881,\n  2.054,\n  2.326,\n];\n\n// Zscore Percentile function\nexport function ZscorePercentile(score) {\n  // Filter out all values lower than score\n  // highest index represent percentile\n  return percentiles.filter((p) => p < score).length;\n}\n","export const questions = [\n    \"It’s not wise to tell your secrets.\",\n    \"I like to use clever manipulation to get my way.\",\n    \"Whatever it takes, you must get the important people on your side.\",\n    \"Avoid direct conflict with others because they may be useful in the future.\",\n    \"It’s wise to keep track of information that you can use against people later.\",\n    \"You should wait for the right time to get back at people.\",\n    \"There are things you should hide from other people to preserve your reputation.\",\n    \"Make sure your plans benefit yourself, not others.\",\n    \"Most people can be manipulated.\",\n    \"People see me as a natural leader.\",\n    \"I hate being the center of attention.\",\n    \"Many group activities tend to be dull without me.\",\n    \"I know that I am special because everyone keeps telling me so.\",\n    \"I like to get acquainted with important people.\",\n    \"I feel embarrassed if someone compliments me.\",\n    \"I have been compared to famous people.\",\n    \"I am an average person.\",\n    \"I insist on getting the respect I deserve.\",\n    \"I like to get revenge on authorities.\",\n    \"I avoid dangerous situations.\",\n    \"Payback needs to be quick and nasty.\",\n    \"People often say I’m out of control.\",\n    \"It’s true that I can be mean to others.\",\n    \"People who mess with me always regret it.\",\n    \"I have never gotten into trouble with the law.\",\n    \"I enjoy having sex with people I hardly know.\",\n    \"I’ll say anything to get what I want.\",\n  ];\n  \n  export const fields = [\n    \"Mac[Mac1]\",\n    \"Mac[Mac2]\",\n    \"Mac[Mac3]\",\n    \"Mac[Mac4]\",\n    \"Mac[Mac5]\",\n    \"Mac[Mac6]\",\n    \"Mac[Mac7]\",\n    \"Mac[Mac8]\",\n    \"Mac[Mac9]\",\n    \"Nar[Nar01]\",\n    \"Nar[Nar02]\",\n    \"Nar[Nar03]\",\n    \"Nar[Nar04]\",\n    \"Nar[Nar05]\",\n    \"Nar[Nar06]\",\n    \"Nar[Nar07]\",\n    \"Nar[Nar08]\",\n    \"Nar[Nar09]\",\n    \"Psy[Psy01]\",\n    \"Psy[Psy02]\",\n    \"Psy[Psy03]\",\n    \"Psy[Psy04]\",\n    \"Psy[Psy05]\",\n    \"Psy[Psy06]\",\n    \"Psy[Psy07]\",\n    \"Psy[Psy08]\",\n    \"Psy[Psy09]\",\n  ];","import React, { useRef, useState } from \"react\";\nimport { Question, SubmitButton, Heading, SubHeading } from \"../components/index\";\nimport {\n  ZscoreMachiavelli,\n  ZscoreNarcissism,\n  ZscorePsychopathy,\n  ZscorePercentile,\n} from \"../math/Zscore.js\";\nimport { questions, fields } from \"../data/DarkTriadData\";\n\nexport function DarkTriadForm() {\n  const [machiavelliResult, setMachiavelliResult] = useState<\n    number | undefined\n  >();\n  const [narcissismResult, setNarcissismResult] = useState<\n    number | undefined\n  >();\n  const [psychopathyResult, setPsychopathyResult] = useState<\n    number | undefined\n  >();\n  const [showResults, setShowResults] = useState(false);\n\n  type ResponseRefObject = {\n    [key: string]: string;\n  };\n\n  const responseRefs = useRef<ResponseRefObject | null>({});\n\n  const onSubmit = () => {\n    var responseValues = Object.values(\n      responseRefs.current ?? []\n    ).map((value: string) => parseInt(value));\n    console.log(\"responseValues\");\n    console.log(responseValues);\n    var results = Results(responseValues);\n    setMachiavelliResult(results[\"machiavelli\"]);\n    setNarcissismResult(results[\"narcissism\"]);\n    setPsychopathyResult(results[\"psychopathy\"]);\n    setShowResults(true);\n  };\n\n  // Compute scores and results\n  const MachiavelliScore = (machiavelliResponses: number[]) => {\n    var sum = machiavelliResponses.reduce((a: number, b: number) => a + b, 0);\n    var x = sum / machiavelliResponses.length;\n    var score = ZscoreMachiavelli(x);\n    return score;\n  };\n\n  const NarcissismScore = (narcissismResponses: number[]) => {\n    // Question 2, 6 and 9 of Narcissism section have reverse scale\n    narcissismResponses[1] = 6 - narcissismResponses[1];\n    narcissismResponses[5] = 6 - narcissismResponses[5];\n    narcissismResponses[8] = 6 - narcissismResponses[8];\n    var sum = narcissismResponses.reduce((a: number, b: number) => a + b, 0);\n    var x = sum / narcissismResponses.length;\n    var score = ZscoreNarcissism(x);\n    return score;\n  };\n\n  const PsychopathyScore = (psychopathyResponses: number[]) => {\n    // Question 2 and 6 of Psychopathy section have reverse scale\n    psychopathyResponses[1] = 6 - psychopathyResponses[1];\n    psychopathyResponses[6] = 6 - psychopathyResponses[6];\n    var sum = psychopathyResponses.reduce((a: number, b: number) => a + b, 0);\n    var x = sum / psychopathyResponses.length;\n    var score = ZscorePsychopathy(x);\n    return score;\n  };\n\n  const Results = (responses: number[]) => {\n    console.log(\"RESULTS\");\n    console.log(responses); // []\n    // Pick out responses for each personality trait (9 questions each in the following order)\n    var machiavelliResponses = responses.slice(0, 9);\n    var narcissismResponses = responses.slice(9, 18);\n    var psychopathyResponses = responses.slice(18, 27);\n\n    // Compute results\n    var results = {\n      machiavelli: () =>\n        ZscorePercentile(MachiavelliScore(machiavelliResponses)),\n      narcissism: () => ZscorePercentile(NarcissismScore(narcissismResponses)),\n      psychopathy: () =>\n        ZscorePercentile(PsychopathyScore(psychopathyResponses)),\n    };\n    return results;\n  };\n\n  const Explanation = (result: number | null) => {\n    var text = \"\"\n    if (result === null){\n      text = \"NaN\"\n    } else if (result > 90){\n      text = text.concat(result.toString(), \" %   |  \", \"You are an extreme case\")\n    } else if (result > 50){\n      text = text.concat(result.toString(), \" %   |  \", \"Above average\")\n    } else if (result > 25){\n      text = text.concat(result.toString(), \" %   |  \", \"Below average\")\n    } else {\n      text = text.concat(result.toString(), \" %   |  \", \"Nope...\")\n    }\n\n    return <SubHeading text={text}/>\n\n  }\n\n  return (\n    <div>\n      {showResults ? (\n        <div style={{ display: \"flex\", flexDirection:\"column\"}}>\n          <Heading text=\"Thank you, here are your results\"/>\n          <SubHeading text=\"MACHIAVELLIAN?\" />\n          {Explanation(machiavelliResult ?? null)}\n          <SubHeading text=\"NARCISSIST?\" />\n          {Explanation(narcissismResult ?? null)}\n          <SubHeading text=\"PSYCHOPATHIC?\" />\n          {Explanation(psychopathyResult ?? null)}\n\n          <button onClick={() => setShowResults(false)}>Again</button>\n        </div>\n      ) : (\n        <div>\n          <h1>\n            Welcome to the Dark Triad!\n          </h1>\n          <h4>\n            Test yourself for machiavellianism, narcissism and psychopathy. \n            Reply as well as you can to all questions with a value of 1 to 5 \n            where:\n          </h4>\n          <h4>\n            1 = fully disagree, 5 = fully agree\n          </h4>\n        <form\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit();\n          }}\n          >\n          {questions.map((q, i) => (\n            <Question\n            key={i}\n            question={q}\n            index={i}\n            name={fields[i]}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              responseRefs.current\n              ? (responseRefs.current[fields[i]] = e.target.value)\n              : null}\n              />\n              ))}\n          <SubmitButton/>\n        </form>\n      </div>\n      )}\n    </div>\n  );\n}\n","import { ThemeProvider } from \"styled-components\";\nimport { GlobalTheme } from \"./global-theme\";\nimport { DarkTriadForm } from \"./features/DarkTriadForm\";\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={GlobalTheme}>\n\n    <div style={{\n      fontFamily: GlobalTheme.fontFamily,\n      padding: \"40px\",\n\n    }}>\n      <DarkTriadForm/>\n    </div>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}